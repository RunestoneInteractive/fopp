<?xml version="1.0"?>
<section xml:id="transforming-sequences_cloning-lists">
  <title>Cloning Lists</title>
  <p>If we want to modify a list and also keep a copy of the original, we need to be
            able to make a copy of the list itself, not just the reference. This process is
            sometimes called <term>cloning</term>, to avoid the ambiguity of the word copy.</p>
  <p>The easiest way to clone a list is to use the slice operator.</p>
  <p>Taking any slice of <c>a</c> creates a new list. In this case the slice happens to
            consist of the whole list.</p>
  <program xml:id="clens8_5_1" interactive="activecode" language="python">
    <input>
a = [81,82,83]

b = a[:]       # make a clone using slice
print(a == b)
print(a is b)

b[0] = 5

print(a)
print(b)
        </input>
  </program>
  <p>Now we are free to make changes to <c>b</c> without worrying about <c>a</c>.  Again, we can clearly see in
            codelens that <c>a</c> and <c>b</c> are entirely different list objects.</p>
  <p>
    <term>Check your understanding</term>
  </p>
  <exercise label="question8_5_1">
    <statement>
      <p>What is printed by the following statements?</p>
      <program language="python">
        <input>
alist = [4,2,8,6,5]
blist = alist * 2
blist[3] = 999
print(alist)
</input>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>[4,2,8,999,5,4,2,8,6,5]</p>
        </statement>
        <feedback>
          <p>print alist not print blist</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>[4,2,8,999,5]</p>
        </statement>
        <feedback>
          <p>blist is changed, not alist.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>[4,2,8,6,5]</p>
        </statement>
        <feedback>
          <p>Yes, alist was unchanged by the assignment statement. blist was a copy of the references in alist.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
