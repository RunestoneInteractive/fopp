<?xml version="1.0"?>
<section xml:id="nested-data_nested-dictionaries">
  <title>Nested Dictionaries</title>
  <p>Just as lists can contain items of any type, the value associated with a key in a dictionary can also be an object of any
            type. In particular, it is often useful to have a list or a dictionary as a value in a dictionary. And of course, those
            lists or dictionaries can also contain lists and dictionaries. There can be many layers of nesting.</p>
  <p>Only the values in dictionaries can be objects of arbitrary type. The keys in dictionaries must be one of the immutable
            data types (numbers, strings, tuples).</p>
  <p>
    <term>Check Your Understanding</term>
  </p>
  <exercise label="question17_2_1">
    <statement>
      <p>Which of the following is a legal assignment statement, after the following code executes?</p>
      <program language="python">
        <input>
d = {'key1': {'a': 5, 'c': 90, 5: 50}, 'key2':{'b': 3, 'c': "yes"}}
</input>
      </program>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>d[5] = {1: 2, 3: 4}</p>
        </statement>
        <feedback>
          <p>5 is a valid key; {1:2, 3:4} is a dictionary with two keys, and is a valid value to associate with key 5.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>d[{1:2, 3:4}] = 5</p>
        </statement>
        <feedback>
          <p>Dictionary keys must be of immutable types. A dictionary can't be used as a key in a dictionary.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>d['key1']['d'] = d['key2']</p>
        </statement>
        <feedback>
          <p>d['key2'] is {'b': 3, 'c': "yes"}, a python object. It can be bound to the key 'd' in a dictionary {'a': 5, 'c': 90, 5: 50}</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>d[key2] = 3</p>
        </statement>
        <feedback>
          <p>key2 is an unbound variable here. d['key2'] would be OK.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="ac17_2_1">
    <statement>
      <p><term>1.</term> Extract the value associated with the key color and assign it to the variable <c>color</c>. Do not hard code this.</p>
    </statement>
    <program xml:id="ac17_2_1_editor" interactive="activecode" language="python">
      <input>
info = {'personal_data':
         {'name': 'Lauren',
          'age': 20,
          'major': 'Information Science',
          'physical_features':
             {'color': {'eye': 'blue',
                        'hair': 'brown'},
              'height': "5'8"}
         },
       'other':
         {'favorite_colors': ['purple', 'green', 'blue'],
          'interested_in': ['social media', 'intellectual property', 'copyright', 'music', 'books']
         }
      }

=====

from unittest.gui import TestCaseGui

class myTests(TestCaseGui):

   def testOne(self):
      self.assertEqual(color, {'eye': 'blue', 'hair': 'brown'}, "Testing that color has the correct value.")

myTests().main()
        </input>
    </program>
  </exercise>
</section>
