<?xml version="1.0"?>
<section xml:id="python-turtle_incremental-programming">
  <title>&#x1F469;&#x200D;&#x1F4BB;  Incremental Programming</title>
  <p>By now you've likely come across occasions where your code will be long or complex. If you
            approach problems like this by writing out all the code and <em>then</em> running it, you'll likely
            find yourself frustrated by the debugging process. There are ways to make programming easier
            though!</p>
  <p>1.  <term>Start Small</term>  This is probably the single biggest piece of advice for programmers at
            every level. Of course it's tempting to sit down and crank out an entire program at once. But,
            when the program &#x2013; inevitably &#x2013; does not work then you have a myriad of options for things
            that might be wrong. Where to start? Where to look first? How to figure out what went wrong?
            I'll get to that in the next section. So, start with something really small. Maybe just two
            lines and then make sure that runs ok. Hitting the run button is quick and easy, and gives you
            immediate feedback about whether what you have just done is ok or not. Another immediate
            benefit of having something small working is that you have something to turn in. Turning in a
            small, incomplete program, is almost always better than nothing.</p>
  <p>2.  <term>Keep it working</term>  Once you have a small part of your program working the next step is
            to figure out something small to add to it. If you keep adding small pieces of the program one
            at a time, it is much easier to figure out what went wrong, as it is most likely that the
            problem is going to be in the new code you have just added. Less new code means its easier to
            figure out where the problem is.</p>
  <p>This notion of <term>Get something working and keep it working</term> is a mantra that you can repeat
            throughout your career as a programmer. It's a great way to avoid the frustrations mentioned
            above. Think of it this way. Every time you have a little success, your brain releases a tiny
            bit of chemical that makes you happy. So, you can keep yourself happy and make programming
            more enjoyable by creating lots of small victories for yourself.</p>
  <p>Below we have already started to build a house. To practice incremental programming, try drawing
            the rest of the house. Each time you draw something new on the screen, run the program to see if
            it executed in the way that you expected!</p>
  <program xml:id="ac3_100_1" interactive="activecode" language="python">
    <input>
import turtle
wn = turtle.Screen()
bob = turtle.Turtle()
bob.right(90)
bob.forward(50)
bob.left(90)
bob.forward(50)

# Add your code below!
        </input>
  </program>
</section>
